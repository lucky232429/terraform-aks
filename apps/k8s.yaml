apiVersion: apps/v1
kind: Deployment
metadata:
  name: #{appname}#
  namespace: #{nameSpace}#
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
       maxSurge: 1
       maxUnavailable: 1
  minReadySeconds: 30   
  selector:
    matchLabels:
      app: #{appname}#
  template:
    metadata:
      labels:
        app: #{appname}#
    spec:
      containers:
      - name: #{appname}#
        image: #{acr_path}#/#{appname}#-repo:#{Build.DefinitionName}#-#{Build.BuildNumber}#
        imagePullPolicy: 'Always'
          resources:
            requests:
              cpu: 250m
              memory: 250Mi
            limits:
              cpu: 500m
              memory: 500Mi
          ports:
            - containerPort: 2026
              protocol: TCP
              name: #{appname}#
--
apiVersion: v1
kind: Service
metadata:
  name: #{appname}#
  namespace: #{nameSpace}#
spec:
  type: ClusterIP
  ports:
    - port: 8080
  selector:
    app: #{appname}#
---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: #{appname}#-hpa
  namespace: #{nameSpace}#
spec:
  maxReplicas: 6
  minReplicas: #{replicas}#
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: #{appname}#
  targetCPUUtilizationPercentage: 90
--
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: #{appname}#-ingress
  namespace: #{nameSpace}#
  annotations:
    kubernetes.io/ingress.class: azure/application-gateway
    appgw.ingress.kubernetes.io/request-timeout: "300"
    appgw.ingress.kubernetes.io/backend-path-prefix: "/"
    appgw.ingress.kubernetes.io/backend-protocol: "http"
spec:
  tls:
    - hosts:
        - #{agic-fqdn}#
      secretName: #{tlsSecret}#
  rules:
  - host: #{agic-fqdn}#
    http:
      paths:
      - path: /#{appname}#/
        pathType: Prefix
        backend:
          service:
            name: #{appname}#
            port: 
              number: 8080
